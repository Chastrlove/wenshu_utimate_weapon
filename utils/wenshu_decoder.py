from datetime import datetime

from utils.decode_components import des3decrypt


def decode_json(json_data:dict) -> str:
    if not json_data:
        return ''
    plain_text = des3decrypt(cipher_text=json_data["result"],
                             key=json_data["secretKey"],
                             iv=datetime.now().strftime("%Y%m%d"))
    return plain_text


if __name__ == '__main__':
    null = None
    true = True
    json_data = \
        {
            "code": 1,
            "description": null,
            "secretKey": "v2BAiRAwUrnRUU9WeCe8jVJf",
            "result": "",
            "success": true
        }
    print(decode_json(json_data))
